AWSTemplateFormatVersion: 2010-09-09
Description: >
  Mahmoud Ahmedy / Udacity
  This template deploys the server infrastructure of a high availability app.
  Deployments:
  - Security Groups:
    - Load Balancer
    - Web Server
    - Jumpbox Server
  - Application Load Balancer
  - Auto Scaling Group
  - Jumpbox Instance for each Availability Zone

Parameters:
  WebServerImageAMI:
    Description: Web Server Machine Linux distro AMI
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"

  JumpboxImageAMI:
    Description: Jumpbox Machine Linux distro AMI
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"

  WebServerGroupMinSize:
    Description: Minimum number of web application servers
    Type: String
    Default: "1"

  WebServerGroupMaxSize:
    Description: Maximum number of web application servers
    Type: String
    Default: "3"

  WebServerGroupDesiredCapacity:
    Description: Desired initial number of web application servers
    Type: String
    Default: "2"

  KeyPairName:
    Description: Name of key-pair (PEM) file for devops access.
    Type: String
    Default: "us-west-2-key"

Resources:
  LoadBalancerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the load balancer
      VpcId: !ImportValue T3C7-VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: T3C7 Load Balancer Security Group

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for web servers
      VpcId: !ImportValue T3C7-VPC
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref LoadBalancerSecGroup
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - SourceSecurityGroupId: !Ref JumpboxSecGroup
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
      Tags:
        - Key: Name
          Value: T3C7 Web Server Security Group

  JumpboxSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Jumpbox Servers
      VpcId: !ImportValue T3C7-VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
      Tags:
        - Key: Name
          Value: T3C7 Jumpbox Security Group

  WebServerLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        yum install -y httpd.x86_64
        systemctl start httpd.service
        systemctl enable httpd.service
        echo "<h1>It Works Udacity!</h1>" > /var/www/html/index.html
      ImageId: !Ref WebServerImageAMI
      SecurityGroups:
        - !Ref WebServerSecGroup
      InstanceType: t2.micro

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !ImportValue T3C7-Private-Subnet-1
      LaunchConfigurationName: !Ref WebServerLaunchConfig
      DesiredCapacity: !Ref WebServerGroupDesiredCapacity
      MinSize: !Ref WebServerGroupMinSize
      MaxSize: !Ref WebServerGroupMaxSize
      MetricsCollection:
        - Granularity: "1Minute"
          Metrics:
            - "GroupMinSize"
            - "GroupMaxSize"
      TargetGroupARNs:
        - !Ref "WebAppTargetGroup"

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: !ImportValue T3C7-VPC

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !ImportValue T3C7-Public-Subnet-1
        - !ImportValue T3C7-Public-Subnet-2
      SecurityGroups:
        - !Ref LoadBalancerSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: "forward"
          TargetGroupArn: !Ref WebAppTargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  ApplicationLoadBalancerListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: "forward"
          TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
        - Field: "path-pattern"
          Values: ["/"]
      ListenerArn: !Ref Listener
      Priority: 1

  JumpboxPublicSubnet1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref JumpboxImageAMI
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SubnetId: !ImportValue T3C7-Public-Subnet-1
      SecurityGroupIds:
        - !Ref JumpboxSecGroup
      Tags:
        - Key: Name
          Value: T3C7 Jumpbox Host 1

Outputs:
  LoadBalancerDNSName:
    Description: DNS Name of the web application
    Value: !Join
      - ""
      - - "http://"
        - !GetAtt LoadBalancer.DNSName
    Export:
      Name: T3C7-DNS-NAME

  JumpboxHostIPPublicSubnet1:
    Description: IP address of Jumpbox host in public subnet 1
    Value: !GetAtt JumpboxPublicSubnet1.PublicIp
    Export:
      Name: T3C7-JUMPBOX-HOST-IP-PUB-SN-1
